diff -uprN pi-hole-5.10/adlists.list pi-hole-5.10.cust/adlists.list
--- pi-hole-5.10/adlists.list	1970-01-01 01:00:00.000000000 +0100
+++ pi-hole-5.10.cust/adlists.list	2022-07-05 16:10:12.411122936 +0200
@@ -0,0 +1,4 @@
+https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
+https://mirror1.malwaredomains.com/files/justdomains
+https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
+https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
diff -uprN pi-hole-5.10/advanced/Scripts/database_migration/gravity-db.sh pi-hole-5.10.cust/advanced/Scripts/database_migration/gravity-db.sh
--- pi-hole-5.10/advanced/Scripts/database_migration/gravity-db.sh	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/advanced/Scripts/database_migration/gravity-db.sh	2022-07-05 16:10:12.181130544 +0200
@@ -10,7 +10,7 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-readonly scriptPath="/etc/.pihole/advanced/Scripts/database_migration/gravity"
+readonly scriptPath="/opt/pihole/database_migration/gravity"
 
 upgrade_gravityDB(){
 	local database piholeDir auditFile version
diff -uprN pi-hole-5.10/advanced/Scripts/pihole-reenable.sh pi-hole-5.10.cust/advanced/Scripts/pihole-reenable.sh
--- pi-hole-5.10/advanced/Scripts/pihole-reenable.sh	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/advanced/Scripts/pihole-reenable.sh	2022-07-05 16:10:12.199129948 +0200
@@ -17,7 +17,7 @@
 # This ensures that pihole ends up in the correct state after a sequence of
 # commands suchs as: `pihole disable 30s; pihole enable; pihole disable`
 
-readonly PI_HOLE_BIN_DIR="/usr/local/bin"
+readonly PI_HOLE_BIN_DIR="/usr/bin"
 
 sleep "${1}"
 "${PI_HOLE_BIN_DIR}"/pihole enable
diff -uprN pi-hole-5.10/advanced/Scripts/piholeLogFlush.sh pi-hole-5.10.cust/advanced/Scripts/piholeLogFlush.sh
--- pi-hole-5.10/advanced/Scripts/piholeLogFlush.sh	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/advanced/Scripts/piholeLogFlush.sh	2022-07-05 16:10:12.237128691 +0200
@@ -14,7 +14,7 @@ source ${colfile}
 # In case we're running at the same time as a system logrotate, use a
 # separate logrotate state file to prevent stepping on each other's
 # toes.
-STATEFILE="/var/lib/logrotate/pihole"
+STATEFILE="/var/lib/logrotate_pihole.status"
 
 # Determine database location
 # Obtain DBFILE=... setting from pihole-FTL.db
@@ -31,35 +31,35 @@ if [ -z "$DBFILE" ]; then
 fi
 
 if [[ "$@" != *"quiet"* ]]; then
-    echo -ne "  ${INFO} Flushing /var/log/pihole.log ..."
+    echo -ne "  ${INFO} Flushing /run/log/pihole/pihole.log ..."
 fi
 if [[ "$@" == *"once"* ]]; then
     # Nightly logrotation
-    if command -v /usr/sbin/logrotate >/dev/null; then
+    if command -v /usr/bin/logrotate >/dev/null; then
         # Logrotate once
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
+        /usr/bin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
     else
         # Copy pihole.log over to pihole.log.1
         # and empty out pihole.log
         # Note that moving the file is not an option, as
         # dnsmasq would happily continue writing into the
         # moved file (it will have the same file handler)
-        cp -p /var/log/pihole.log /var/log/pihole.log.1
-        echo " " > /var/log/pihole.log
-        chmod 644 /var/log/pihole.log
+        cp -p /run/log/pihole/pihole.log /run/log/pihole/pihole.log.1
+        echo " " > /run/log/pihole/pihole.log
+        chmod 644 /run/log/pihole/pihole.log
     fi
 else
     # Manual flushing
-    if command -v /usr/sbin/logrotate >/dev/null; then
+    if command -v /usr/bin/logrotate >/dev/null; then
         # Logrotate twice to move all data out of sight of FTL
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate; sleep 3
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
+        /usr/bin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate; sleep 3
+        /usr/bin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
     else
         # Flush both pihole.log and pihole.log.1 (if existing)
-        echo " " > /var/log/pihole.log
-        if [ -f /var/log/pihole.log.1 ]; then
-            echo " " > /var/log/pihole.log.1
-            chmod 644 /var/log/pihole.log.1
+        echo " " > /run/log/pihole/pihole.log
+        if [ -f /run/log/pihole/pihole.log.1 ]; then
+            echo " " > /run/log/pihole/pihole.log.1
+            chmod 644 /run/log/pihole/pihole.log.1
         fi
     fi
     # Delete most recent 24 hours from FTL's database, leave even older data intact (don't wipe out all history)
@@ -70,6 +70,6 @@ else
 fi
 
 if [[ "$@" != *"quiet"* ]]; then
-    echo -e "${OVER}  ${TICK} Flushed /var/log/pihole.log"
+    echo -e "${OVER}  ${TICK} Flushed /run/log/pihole/pihole.log"
     echo -e "  ${TICK} Deleted ${deleted} queries from database"
 fi
diff -uprN pi-hole-5.10/advanced/Scripts/webpage.sh pi-hole-5.10.cust/advanced/Scripts/webpage.sh
--- pi-hole-5.10/advanced/Scripts/webpage.sh	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/advanced/Scripts/webpage.sh	2022-07-05 16:10:12.409123002 +0200
@@ -26,7 +26,7 @@ readonly gravityDBfile="/etc/pihole/grav
 readonly PI_HOLE_FILES_DIR="/etc/.pihole"
 # shellcheck disable=SC2034  # used in basic-install
 PH_TEST="true"
-source "${PI_HOLE_FILES_DIR}/automated install/basic-install.sh"
+source "/opt/pihole/basic-install.sh"
 
 utilsfile="/opt/pihole/utils.sh"
 source "${utilsfile}"
@@ -42,10 +42,6 @@ Example: pihole -a -p password
 Set options for the Admin Console
 
 Options:
-  -p, password                    Set Admin Console password
-  -c, celsius                     Set Celsius as preferred temperature unit
-  -f, fahrenheit                  Set Fahrenheit as preferred temperature unit
-  -k, kelvin                      Set Kelvin as preferred temperature unit
   -e, email                       Set an administrative contact address for the Block Page
   -h, --help                      Show this help dialog
   -i, interface                   Specify dnsmasq's interface listening behavior
@@ -87,10 +83,6 @@ delete_dnsmasq_setting() {
     removeKey "${dnsmasqconfig}" "${1}"
 }
 
-SetTemperatureUnit() {
-    addOrEditKeyValPair "${setupVars}" "TEMPERATUREUNIT" "${unit}"
-    echo -e "  ${TICK} Set temperature unit to ${unit}"
-}
 
 HashPassword() {
     # Compute password hash twice to avoid rainbow table vulnerability
@@ -99,51 +91,6 @@ HashPassword() {
     echo "${return}"
 }
 
-SetWebPassword() {
-    if [ "${SUDO_USER}" == "www-data" ]; then
-        echo "Security measure: user www-data is not allowed to change webUI password!"
-        echo "Exiting"
-        exit 1
-    fi
-
-    if [ "${SUDO_USER}" == "lighttpd" ]; then
-        echo "Security measure: user lighttpd is not allowed to change webUI password!"
-        echo "Exiting"
-        exit 1
-    fi
-
-    if (( ${#args[2]} > 0 )) ; then
-        readonly PASSWORD="${args[2]}"
-        readonly CONFIRM="${PASSWORD}"
-    else
-        # Prevents a bug if the user presses Ctrl+C and it continues to hide the text typed.
-        # So we reset the terminal via stty if the user does press Ctrl+C
-        trap '{ echo -e "\nNo password will be set" ; stty sane ; exit 1; }' INT
-        read -s -r -p "Enter New Password (Blank for no password): " PASSWORD
-        echo ""
-
-        if [ "${PASSWORD}" == "" ]; then
-            addOrEditKeyValPair "${setupVars}" "WEBPASSWORD" ""
-            echo -e "  ${TICK} Password Removed"
-            exit 0
-        fi
-
-        read -s -r -p "Confirm Password: " CONFIRM
-        echo ""
-    fi
-
-    if [ "${PASSWORD}" == "${CONFIRM}" ] ; then
-        # We do not wrap this in brackets, otherwise BASH will expand any appropriate syntax
-        hash=$(HashPassword "$PASSWORD")
-        # Save hash to file
-        addOrEditKeyValPair "${setupVars}" "WEBPASSWORD" "${hash}"
-        echo -e "  ${TICK} New password set"
-    else
-        echo -e "  ${CROSS} Passwords don't match. Your password has not been changed"
-        exit 1
-    fi
-}
-
 ProcessDNSSettings() {
     source "${setupVars}"
 
@@ -351,14 +298,6 @@ SetDNSServers() {
     RestartDNS
 }
 
-SetExcludeDomains() {
-    addOrEditKeyValPair "${setupVars}" "API_EXCLUDE_DOMAINS" "${args[2]}"
-}
-
-SetExcludeClients() {
-    addOrEditKeyValPair "${setupVars}" "API_EXCLUDE_CLIENTS" "${args[2]}"
-}
-
 Poweroff(){
     nohup bash -c "sleep 5; poweroff" &> /dev/null </dev/null &
 }
@@ -452,49 +391,6 @@ ra-param=*,0,0
     fi
 }
 
-EnableDHCP() {
-    addOrEditKeyValPair "${setupVars}" "DHCP_ACTIVE" "true"
-    addOrEditKeyValPair "${setupVars}" "DHCP_START" "${args[2]}"
-    addOrEditKeyValPair "${setupVars}" "DHCP_END" "${args[3]}"
-    addOrEditKeyValPair "${setupVars}" "DHCP_ROUTER" "${args[4]}"
-    addOrEditKeyValPair "${setupVars}" "DHCP_LEASETIME" "${args[5]}"
-    addOrEditKeyValPair "${setupVars}" "PIHOLE_DOMAIN" "${args[6]}"
-    addOrEditKeyValPair "${setupVars}" "DHCP_IPv6" "${args[7]}"
-    addOrEditKeyValPair "${setupVars}" "DHCP_rapid_commit" "${args[8]}"
-
-    # Remove possible old setting from file
-    removeKey "${dnsmasqconfig}" "dhcp-"
-    removeKey "${dnsmasqconfig}" "quiet-dhcp"
-
-    # If a DHCP client claims that its name is "wpad", ignore that.
-    # This fixes a security hole. see CERT Vulnerability VU#598349
-    # We also ignore "localhost" as Windows behaves strangely if a
-    # device claims this host name
-    addKey "${dnsmasqconfig}" "dhcp-name-match=set:hostname-ignore,wpad
-dhcp-name-match=set:hostname-ignore,localhost
-dhcp-ignore-names=tag:hostname-ignore"
-
-    ProcessDHCPSettings
-
-    RestartDNS
-}
-
-DisableDHCP() {
-    addOrEditKeyValPair "${setupVars}" "DHCP_ACTIVE" "false"
-
-    # Remove possible old setting from file
-    removeKey "${dnsmasqconfig}" "dhcp-"
-    removeKey "${dnsmasqconfig}" "quiet-dhcp"
-
-    ProcessDHCPSettings
-
-    RestartDNS
-}
-
-SetWebUILayout() {
-    addOrEditKeyValPair "${setupVars}" "WEBUIBOXEDLAYOUT" "${args[2]}"
-}
-
 SetWebUITheme() {
     addOrEditKeyValPair "${setupVars}" "WEBTHEME" "${args[2]}"
 }
@@ -650,7 +546,7 @@ Teleporter() {
         host="${host//./_}"
         filename="pi-hole-${host:-noname}-teleporter_${datetimestamp}.tar.gz"
     fi
-    php /var/www/html/admin/scripts/pi-hole/php/teleporter.php > "${filename}"
+    php /srv/http/pihole/admin/scripts/pi-hole/php/teleporter.php > "${filename}"
 }
 
 checkDomain()
@@ -694,14 +590,6 @@ clearAudit()
     pihole-FTL sqlite3 "${gravityDBfile}" "DELETE FROM domain_audit;"
 }
 
-SetPrivacyLevel() {
-    # Set privacy level. Minimum is 0, maximum is 3
-    if [ "${args[2]}" -ge 0 ] && [ "${args[2]}" -le 3 ]; then
-        addOrEditKeyValPair "${FTLconf}" "PRIVACYLEVEL" "${args[2]}"
-        pihole restartdns reload-lists
-    fi
-}
-
 AddCustomDNSAddress() {
     echo -e "  ${TICK} Adding custom DNS entry..."
 
@@ -828,20 +716,11 @@ main() {
     args=("$@")
 
     case "${args[1]}" in
-        "-p" | "password"     ) SetWebPassword;;
-        "-c" | "celsius"      ) unit="C"; SetTemperatureUnit;;
-        "-f" | "fahrenheit"   ) unit="F"; SetTemperatureUnit;;
-        "-k" | "kelvin"       ) unit="K"; SetTemperatureUnit;;
         "setdns"              ) SetDNSServers;;
-        "setexcludedomains"   ) SetExcludeDomains;;
-        "setexcludeclients"   ) SetExcludeClients;;
         "poweroff"            ) Poweroff;;
         "reboot"              ) Reboot;;
         "restartdns"          ) RestartDNS;;
         "setquerylog"         ) SetQueryLogOptions;;
-        "enabledhcp"          ) EnableDHCP;;
-        "disabledhcp"         ) DisableDHCP;;
-        "layout"              ) SetWebUILayout;;
         "theme"               ) SetWebUITheme;;
         "-h" | "--help"       ) helpFunc;;
         "addstaticdhcp"       ) AddDHCPStaticAddress;;
@@ -852,7 +731,6 @@ main() {
         "adlist"              ) CustomizeAdLists;;
         "audit"               ) addAudit "$@";;
         "clearaudit"          ) clearAudit;;
-        "-l" | "privacylevel" ) SetPrivacyLevel;;
         "addcustomdns"        ) AddCustomDNSAddress;;
         "removecustomdns"     ) RemoveCustomDNSAddress;;
         "addcustomcname"      ) AddCustomCNAMERecord;;
diff -uprN pi-hole-5.10/advanced/Templates/logrotate pi-hole-5.10.cust/advanced/Templates/logrotate
--- pi-hole-5.10/advanced/Templates/logrotate	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/advanced/Templates/logrotate	2022-07-05 16:10:12.226129055 +0200
@@ -1,4 +1,4 @@
-/var/log/pihole.log {
+/run/log/pihole/pihole.log {
 	# su #
 	daily
 	copytruncate
@@ -9,7 +9,7 @@
 	nomail
 }
 
-/var/log/pihole-FTL.log {
+/run/log/pihole-ftl/pihole-FTL.log {
 	# su #
 	weekly
 	copytruncate
diff -uprN pi-hole-5.10/advanced/dnsmasq.conf.original pi-hole-5.10.cust/advanced/dnsmasq.conf.original
--- pi-hole-5.10/advanced/dnsmasq.conf.original	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/advanced/dnsmasq.conf.original	2022-07-05 16:10:12.410122969 +0200
@@ -646,3 +646,4 @@
 
 # Include all files in a directory which end in .conf
 #conf-dir=/etc/dnsmasq.d/*.conf
+conf-dir=/etc/dnsmasq.d/,*.conf
diff -uprN pi-hole-5.10/gravity.sh pi-hole-5.10.cust/gravity.sh
--- pi-hole-5.10/gravity.sh	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/gravity.sh	2022-07-05 16:10:12.175130742 +0200
@@ -16,10 +16,10 @@ export LC_ALL=C
 coltable="/opt/pihole/COL_TABLE"
 source "${coltable}"
 # shellcheck disable=SC1091
-source "/etc/.pihole/advanced/Scripts/database_migration/gravity-db.sh"
+source "/opt/pihole/database_migration/gravity-db.sh"
 
 basename="pihole"
-PIHOLE_COMMAND="/usr/local/bin/${basename}"
+PIHOLE_COMMAND="/usr/bin/${basename}"
 
 piholeDir="/etc/${basename}"
 
@@ -36,8 +36,8 @@ piholeGitDir="/etc/.pihole"
 gravityDBfile_default="${piholeDir}/gravity.db"
 # GRAVITYDB may be overwritten by source pihole-FTL.conf below
 GRAVITYDB="${gravityDBfile_default}"
-gravityDBschema="${piholeGitDir}/advanced/Templates/gravity.db.sql"
-gravityDBcopy="${piholeGitDir}/advanced/Templates/gravity_copy.sql"
+gravityDBschema="/opt/pihole/gravity.db.sql"
+gravityDBcopy="/opt/pihole/gravity_copy.sql"
 
 domainsExtension="domains"
 
diff -uprN pi-hole-5.10/pihole pi-hole-5.10.cust/pihole
--- pi-hole-5.10/pihole	2022-04-20 20:41:17.000000000 +0200
+++ pi-hole-5.10.cust/pihole	2022-07-05 16:10:12.205129750 +0200
@@ -15,8 +15,8 @@ readonly PI_HOLE_SCRIPT_DIR="/opt/pihole
 # they might get set again when the installer is sourced. This causes an
 # error due to modifying a readonly variable.
 setupVars="/etc/pihole/setupVars.conf"
-PI_HOLE_BIN_DIR="/usr/local/bin"
-readonly FTL_PID_FILE="/run/pihole-FTL.pid"
+PI_HOLE_BIN_DIR="/usr/bin"
+readonly FTL_PID_FILE="/run/pihole-ftl/pihole-FTL.pid"
 
 readonly colfile="${PI_HOLE_SCRIPT_DIR}/COL_TABLE"
 source "${colfile}"
@@ -52,27 +52,11 @@ debugFunc() {
   exit 0
 }
 
-flushFunc() {
-  "${PI_HOLE_SCRIPT_DIR}"/piholeLogFlush.sh "$@"
-  exit 0
-}
-
 arpFunc() {
   "${PI_HOLE_SCRIPT_DIR}"/piholeARPTable.sh "$@"
   exit 0
 }
 
-updatePiholeFunc() {
-  shift
-  "${PI_HOLE_SCRIPT_DIR}"/update.sh "$@"
-  exit 0
-}
-
-reconfigurePiholeFunc() {
-  /etc/.pihole/automated\ install/basic-install.sh --reconfigure
-  exit 0;
-}
-
 updateGravityFunc() {
   exec "${PI_HOLE_SCRIPT_DIR}"/gravity.sh "$@"
 }
@@ -83,22 +67,7 @@ queryFunc() {
   exit 0
 }
 
-chronometerFunc() {
-  shift
-  "${PI_HOLE_SCRIPT_DIR}"/chronometer.sh "$@"
-  exit 0
-}
-
-
-uninstallFunc() {
-  "${PI_HOLE_SCRIPT_DIR}"/uninstall.sh
-  exit 0
-}
 
-versionFunc() {
-  shift
-  exec "${PI_HOLE_SCRIPT_DIR}"/version.sh "$@"
-}
 
 # Get PID of main pihole-FTL process
 getFTLPID() {
@@ -152,7 +121,7 @@ restartDNS() {
     fi
   else
     # A full restart has been requested
-    svc="service pihole-FTL restart"
+    svc="systemctl restart pihole-FTL"
     str="Restarting DNS server"
     icon="${TICK}"
   fi
@@ -254,9 +223,9 @@ Example: 'pihole logging on'
 Specify whether the Pi-hole log should be used
 
 Options:
-  on                  Enable the Pi-hole log at /var/log/pihole.log
-  off                 Disable and flush the Pi-hole log at /var/log/pihole.log
-  off noflush         Disable the Pi-hole log at /var/log/pihole.log"
+  on                  Enable the Pi-hole log at /run/log/pihole/pihole.log
+  off                 Disable and flush the Pi-hole log at /run/log/pihole/pihole.log
+  off noflush         Disable the Pi-hole log at /run/log/pihole/pihole.log"
     exit 0
   elif [[ "${1}" == "off" ]]; then
     # Disable logging
@@ -382,7 +351,7 @@ tailFunc() {
   # Color blocklist/blacklist/wildcard entries as red
   # Color A/AAAA/DHCP strings as white
   # Color everything else as gray
-  tail -f /var/log/pihole.log | grep --line-buffered "${1}" | sed -E \
+  tail -f /run/log/pihole/pihole.log | grep --line-buffered "${1}" | sed -E \
     -e "s,($(date +'%b %d ')| dnsmasq\[[0-9]*\]),,g" \
     -e "s,(.*(blacklisted |gravity blocked ).*),${COL_RED}&${COL_NC}," \
     -e "s,.*(query\\[A|DHCP).*,${COL_NC}&${COL_NC}," \
@@ -390,50 +359,6 @@ tailFunc() {
   exit 0
 }
 
-piholeCheckoutFunc() {
-  if [[ "$2" == "-h" ]] || [[ "$2" == "--help" ]]; then
-    echo "Usage: pihole checkout [repo] [branch]
-Example: 'pihole checkout master' or 'pihole checkout core dev'
-Switch Pi-hole subsystems to a different GitHub branch
-
-Repositories:
-  core [branch]       Change the branch of Pi-hole's core subsystem
-  web [branch]        Change the branch of Web Interface subsystem
-  ftl [branch]        Change the branch of Pi-hole's FTL subsystem
-
-Branches:
-  master              Update subsystems to the latest stable release
-  dev                 Update subsystems to the latest development release
-  branchname          Update subsystems to the specified branchname"
-    exit 0
-  fi
-
-  source "${PI_HOLE_SCRIPT_DIR}"/piholeCheckout.sh
-  shift
-  checkout "$@"
-}
-
-tricorderFunc() {
-  local tricorder_token
-  if [[ ! -p "/dev/stdin" ]]; then
-    echo -e "  ${INFO} Please do not call Tricorder directly"
-    exit 1
-  fi
-
-  tricorder_token=$(curl --silent --fail --show-error --upload-file "-" https://tricorder.pi-hole.net/upload < /dev/stdin 2>&1)
-  if [[ "${tricorder_token}" != "https://tricorder.pi-hole.net/"* ]]; then
-      echo -e "${CROSS} uploading failed, contact Pi-hole support for assistance."
-      # Log curl error (if available)
-      if [ -n "${tricorder_token}" ]; then
-          echo -e "${INFO} Error message: ${COL_RED}${tricorder_token}${COL_NC}\\n"
-          tricorder_token=""
-      fi
-      exit 1
-  fi
-  echo "Upload successful, your token is: ${COL_GREEN}${tricorder_token}${COL_NC}"
-  exit 0
-}
-
 updateCheckFunc() {
   "${PI_HOLE_SCRIPT_DIR}"/updatecheck.sh "$@"
   exit 0
@@ -455,30 +380,19 @@ Whitelist/Blacklist Options:
 
 Debugging Options:
   -d, debug           Start a debugging session
-                        Add '-a' to automatically upload the log to tricorder.pi-hole.net
-  -f, flush           Flush the Pi-hole log
-  -r, reconfigure     Reconfigure or Repair Pi-hole subsystems
-  -t, tail [arg]      View the live output of the Pi-hole log.
                       Add an optional argument to filter the log
                       (regular expressions are supported)
 
 
 Options:
-  -a, admin           Web interface options
-                        Add '-h' for more info on Web Interface usage
-  -c, chronometer     Calculates stats and displays to an LCD
                         Add '-h' for more info on chronometer usage
   -g, updateGravity   Update the list of ad-serving domains
   -h, --help, help    Show this help dialog
-  -l, logging         Specify whether the Pi-hole log should be used
                         Add '-h' for more info on logging usage
   -q, query           Query the adlists for a specified domain
                         Add '-h' for more info on query usage
-  -up, updatePihole   Update Pi-hole subsystems
                         Add '--check-only' to exit script before update is performed.
-  -v, version         Show installed versions of Pi-hole, Web Interface & FTL
                         Add '-h' for more info on version usage
-  uninstall           Uninstall Pi-hole from your system
   status              Display the running status of Pi-hole subsystems
   enable              Enable Pi-hole subsystems
   disable             Disable Pi-hole subsystems
@@ -486,8 +400,6 @@ Options:
   restartdns          Full restart Pi-hole subsystems
                         Add 'reload' to update the lists and flush the cache without restarting the DNS server
                         Add 'reload-lists' to only update the lists WITHOUT flushing the cache or restarting the DNS server
-  checkout            Switch Pi-hole subsystems to a different GitHub branch
-                        Add '-h' for more info on checkout usage
   arpflush            Flush information stored in Pi-hole's network tables";
   exit 0
 }
@@ -499,12 +411,9 @@ fi
 # functions that do not require sudo power
 case "${1}" in
   "-h" | "help" | "--help"      ) helpFunc;;
-  "-v" | "version"              ) versionFunc "$@";;
-  "-c" | "chronometer"          ) chronometerFunc "$@";;
   "-q" | "query"                ) queryFunc "$@";;
   "status"                      ) statusFunc "$2";;
   "-t" | "tail"                 ) tailFunc "$2";;
-  "tricorder"                   ) tricorderFunc;;
 
   # we need to add all arguments that require sudo power to not trigger the * argument
   "-w" | "whitelist"            ) ;;
@@ -514,18 +423,13 @@ case "${1}" in
   "--white-regex" | "white-regex" ) ;;
   "--white-wild" | "white-wild"   ) ;;
   "-f" | "flush"                ) ;;
-  "-up" | "updatePihole"        ) ;;
-  "-r"  | "reconfigure"         ) ;;
   "-g" | "updateGravity"        ) ;;
   "-l" | "logging"              ) ;;
-  "uninstall"                   ) ;;
   "enable"                      ) ;;
   "disable"                     ) ;;
   "-d" | "debug"                ) ;;
   "restartdns"                  ) ;;
   "-a" | "admin"                ) ;;
-  "checkout"                    ) ;;
-  "updatechecker"               ) ;;
   "arpflush"                    ) ;;
   *                             ) helpFunc;;
 esac
@@ -551,16 +455,11 @@ case "${1}" in
   "--white-wild" | "white-wild"   ) listFunc "$@";;
   "-d" | "debug"                ) debugFunc "$@";;
   "-f" | "flush"                ) flushFunc "$@";;
-  "-up" | "updatePihole"        ) updatePiholeFunc "$@";;
-  "-r"  | "reconfigure"         ) reconfigurePiholeFunc;;
   "-g" | "updateGravity"        ) updateGravityFunc "$@";;
   "-l" | "logging"              ) piholeLogging "$@";;
-  "uninstall"                   ) uninstallFunc;;
   "enable"                      ) piholeEnable 1;;
   "disable"                     ) piholeEnable 0 "$2";;
   "restartdns"                  ) restartDNS "$2";;
   "-a" | "admin"                ) webpageFunc "$@";;
-  "checkout"                    ) piholeCheckoutFunc "$@";;
-  "updatechecker"               ) updateCheckFunc "$@";;
   "arpflush"                    ) arpFunc "$@";;
 esac
